---

---

<div class="w-screen h-screen">
    <canvas class="webgl absolute top-0 left-0 w-full h-full"></canvas>
</div>

<script>
    import * as THREE from 'three';
    import { OrbitControls } from 'three/addons/controls/OrbitControls.js';

    /**
     * Base
     */
    const canvas = document.querySelector('canvas.webgl') as HTMLCanvasElement;
    const sizes = {
        width: window.innerWidth,
        height: window.innerHeight,
    };

    /**
     * Scene
     */
    const scene = new THREE.Scene();

    /**
     * Object
     */
    const geometry = new THREE.BoxGeometry(1, 1, 1);
    const material = new THREE.MeshBasicMaterial({ color: 0xff0000 });
    const mesh = new THREE.Mesh(geometry, material);
    scene.add(mesh);

    /**
     * Camera
     */
    const camera = new THREE.PerspectiveCamera(
        75,
        sizes.width / sizes.height,
        0.1,
        1000,
    );
    camera.position.set(0, 0, 5);
    scene.add(camera);

    /**
     * Controls
     */
    const controls = new OrbitControls(camera, canvas);
    controls.enableDamping = true;

    /**
     * Renderer
     */
    const renderer = new THREE.WebGLRenderer({ canvas });
    renderer.setSize(sizes.width, sizes.height);
    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));

    /**
     * Animate
     */
    const animate = () => {
        mesh.rotation.x += 0.01;
        mesh.rotation.y += 0.01;
        controls.update();
        renderer.render(scene, camera);
        window.requestAnimationFrame(animate);
    };
    animate();

    /**
     * Resize
     */
    window.addEventListener('resize', () => {
        sizes.width = window.innerWidth;
        sizes.height = window.innerHeight;
        camera.aspect = sizes.width / sizes.height;
        camera.updateProjectionMatrix();
        renderer.setSize(sizes.width, sizes.height);
        renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
    });
</script>
